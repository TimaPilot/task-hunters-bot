import discord
from discord.ext import commands
from discord.ui import View, Button
from order_logger import save_order_to_json, update_order_status_by_id
from order_logger import get_order_by_id
from dotenv import load_dotenv
import os

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")

@bot.command()
async def start(ctx):
    class OrderButtonView(View):
        def __init__(self):
            super().__init__(timeout=None)
            self.add_item(Button(label="–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É", style=discord.ButtonStyle.primary, custom_id="order_service"))

    await ctx.send("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=OrderButtonView())

@bot.command(name="–º–æ—ó–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
async def my_orders(ctx):
    from order_logger import get_orders_by_user

    user_id = ctx.author.id
    orders = get_orders_by_user(user_id)

    if not orders:
        await ctx.send("üîç –£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.")
        return

    # –§–æ—Ä–º—É—î–º–æ –∫—Ä–∞—Å–∏–≤–∏–π —Å–ø–∏—Å–æ–∫
    message = "üì¶ **–í–∞—à—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:**\n"
    for order in orders[-10:]:  # –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –æ—Å—Ç–∞–Ω–Ω—ñ 10
        message += f"- `{order['timestamp']}` {order['details']} ‚Äî **{order['status']}**\n"

    await ctx.send(message)

@bot.command(name="–∫–∞–±—ñ–Ω–µ—Ç")
async def user_dashboard(ctx):
    from order_logger import get_orders_by_user
    import datetime

    user = ctx.author
    orders = get_orders_by_user(user.id)

    if not orders:
        await ctx.send("üì≠ –£ –≤–∞—Å —â–µ –Ω–µ –±—É–ª–æ –∂–æ–¥–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")
        return

    total = len(orders)

    # üéñÔ∏è –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å
    if total >= 20:
        status = "–í–Ü–ü-–∫–ª—ñ—î–Ω—Ç üèÜ"
    elif total >= 12:
        status = "–ü–æ—Å—Ç—ñ–π–Ω–∏–π –∫–ª—ñ—î–Ω—Ç üî•"
    elif total >= 5:
        status = "–ê–∫—Ç–∏–≤–Ω–∏–π –∑–∞–º–æ–≤–Ω–∏–∫ üåø"
    else:
        status = "–ù–æ–≤–∞—á–æ–∫ üê£"

    timestamps = [datetime.datetime.strptime(o["timestamp"], "%Y-%m-%d %H:%M:%S") for o in orders]
    first = min(timestamps).strftime("%Y-%m-%d %H:%M")
    last = max(timestamps).strftime("%Y-%m-%d %H:%M")

    message = (
        f"üë§ **{user.name}**\n"
        f"üì¶ –í—Å—å–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω—å: **{total}**\n"
        f"üèÖ –í–∞—à —Å—Ç–∞—Ç—É—Å: **{status}**\n"
        f"üïì –ü–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: `{first}`\n"
        f"üìÖ –û—Å—Ç–∞–Ω–Ω—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: `{last}`"
    )

    await ctx.send(message)


@bot.command(name="–º–∏—Å–ª–∏–≤–µ—Ü—å")
async def hunter_dashboard(ctx):
    from order_logger import load_orders
    import datetime

    user = ctx.author
    all_orders = load_orders()

    # –í–∏–±–∏—Ä–∞—î–º–æ –ª–∏—à–µ —Ç—ñ, –¥–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ –º–∏—Å–ª–∏–≤—Ü–µ–º —ñ —Å—Ç–∞—Ç—É—Å = "–í–∏–∫–æ–Ω–∞–Ω–æ"
    hunter_orders = [
        o for o in all_orders
        if o.get("hunter") == user.name and o.get("status") == "–í–∏–∫–æ–Ω–∞–Ω–æ"
    ]

    if not hunter_orders:
        await ctx.send("üì≠ –í–∏ —â–µ –Ω–µ –≤–∏–∫–æ–Ω–∞–ª–∏ –∂–æ–¥–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.")
        return

    total = len(hunter_orders)
    timestamps = [datetime.datetime.strptime(o["timestamp"], "%Y-%m-%d %H:%M:%S") for o in hunter_orders]
    first = min(timestamps).strftime("%Y-%m-%d %H:%M")
    last = max(timestamps).strftime("%Y-%m-%d %H:%M")

    message = (
        f"üßë‚Äçüåæ **{user.name}**\n"
        f"‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ –∑–∞–º–æ–≤–ª–µ–Ω—å: **{total}**\n"
        f"üìÖ –ü–µ—Ä—à–µ –≤–∏–∫–æ–Ω–∞–Ω–µ: `{first}`\n"
        f"üïì –û—Å—Ç–∞–Ω–Ω—î –≤–∏–∫–æ–Ω–∞–Ω–µ: `{last}`"
    )

    await ctx.send(message)

class ResourceButtonsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="ü™® –ö–∞–º—ñ–Ω—å", style=discord.ButtonStyle.secondary, custom_id="stone"))
        self.add_item(Button(label="üå≤ –î–µ—Ä–µ–≤–æ", style=discord.ButtonStyle.secondary, custom_id="wood"))
        self.add_item(Button(label="üêü –†–∏–±–∞", style=discord.ButtonStyle.secondary, custom_id="fish"))
        self.add_item(Button(label="üçÑ –ì—Ä–∏–±–∏", style=discord.ButtonStyle.secondary, custom_id="mushrooms"))
        self.add_item(Button(label="üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏", style=discord.ButtonStyle.secondary, custom_id="cleaner"))

class OrderProgressView(View):
    def __init__(self, customer: discord.User, resource: str, order_id: int, stage: str = "new"):
        super().__init__(timeout=None)
        self.customer = customer
        self.resource = resource
        self.order_id = order_id

        if stage == "new":
            self.add_item(Button(
                label="‚úÖ –ü—Ä–∏–π–Ω—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
                style=discord.ButtonStyle.success,
                custom_id=f"accept_order_{order_id}"
            ))

        elif stage == "accepted":
            self.add_item(Button(
                label="‚úÖ –ó—ñ–±—Ä–∞–Ω–æ",
                style=discord.ButtonStyle.secondary,
                custom_id=f"ready_{order_id}"
            ))

        elif stage == "ready":
            self.add_item(Button(
                label="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
                style=discord.ButtonStyle.success,
                custom_id=f"finish_{order_id}"
            ))

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:

        # –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É"
        if interaction.data["custom_id"] == "order_service":
            await interaction.response.send_message("üõí –í–∏–±–µ—Ä–∏ —Ä–µ—Å—É—Ä—Å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=ResourceButtonsView(), ephemeral=True)

        # –í–∏–±—ñ—Ä —Ä–µ—Å—É—Ä—Å—É
        elif interaction.data["custom_id"] in ["stone", "wood", "fish", "mushrooms", "cleaner"]:
            from order_logger import save_order_to_json  # —ñ–º–ø–æ—Ä—Ç—É—î–º–æ —Ç—É—Ç

            resource_names = {
                "stone": "ü™® –ö–∞–º—ñ–Ω—å",
                "wood": "üå≤ –î–µ—Ä–µ–≤–æ",
                "fish": "üêü –†–∏–±–∞",
                "mushrooms": "üçÑ –ì—Ä–∏–±–∏",
                "cleaner": "üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏"
            }
            selected = resource_names[interaction.data["custom_id"]]
            user = interaction.user

            # ‚¨áÔ∏è –õ–û–ì–£–Ñ–ú–û –ó–ê–ú–û–í–õ–ï–ù–ù–Ø
            order_data = {
                "customer": user.name,
                "customer_id": user.id,
                "type": "–î–æ—Å—Ç–∞–≤–∫–∞ —Ä–µ—Å—É—Ä—Å—É",
                "details": selected,
                "hunter": None,
                "status": "–û—á—ñ–∫—É—î"
            }
            order_id = save_order_to_json(order_data)

            guild = interaction.guild
            hunters_channel = discord.utils.get(guild.text_channels, name="‚úÖ-–≤–∏–∫–æ–Ω–∞–Ω–Ω—è-–∑–∞–º–æ–≤–ª–µ–Ω—å")

            if not hunters_channel:
                await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª `‚úÖ-–≤–∏–∫–æ–Ω–∞–Ω–Ω—è-–∑–∞–º–æ–≤–ª–µ–Ω—å` –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", ephemeral=True)
                return

            await hunters_channel.send(
                f"üÜï –ù–∞–¥—ñ–π—à–ª–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{selected}** –≤—ñ–¥ {user.mention}",
                view=OrderProgressView(user, interaction.data["custom_id"], order_id, stage="new")
            )

            await interaction.response.send_message(
                f"üì® –í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ **{selected}** —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.",
                ephemeral=True
            )

        # –ü—Ä–∏–π–Ω—è—Ç—Ç—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        elif interaction.data["custom_id"].startswith("accept_order_"):
            from order_logger import get_order_by_id, update_order_status_by_id

            order_id = int(interaction.data["custom_id"].replace("accept_order_", ""))
            order = get_order_by_id(order_id)

            details = order["details"]
            hunter = interaction.user

            # üß† Reverse mapping
            resource_reverse = {
                "ü™® –ö–∞–º—ñ–Ω—å": "stone",
                "üå≤ –î–µ—Ä–µ–≤–æ": "wood",
                "üêü –†–∏–±–∞": "fish",
                "üçÑ –ì—Ä–∏–±–∏": "mushrooms",
                "üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏": "cleaner"
            }
            estimated_times = {
                "stone": "30‚Äì60 —Ö–≤",
                "wood": "15‚Äì20 —Ö–≤",
                "fish": "25‚Äì35 —Ö–≤",
                "mushrooms": "30 —Ö–≤",
                "cleaner": "20‚Äì25 —Ö–≤"
            }

            resource_key = resource_reverse.get(details, "unknown")
            estimated_time = estimated_times.get(resource_key, "‚è≥")

            try:
                customer = interaction.message.mentions[0]
            except IndexError:
                await interaction.response.send_message("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–º–æ–≤–Ω–∏–∫–∞ ü´†", ephemeral=True)
                return

            await interaction.response.edit_message(
                content=f"üîî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{details}** –ø—Ä–∏–π–Ω—è—Ç–æ –º–∏—Å–ª–∏–≤—Ü–µ–º {hunter.mention}!",
                view=OrderProgressView(customer, resource_key, order_id, stage="accepted")
            )

            update_order_status_by_id(order_id, "–í —Ä–æ–±–æ—Ç—ñ", hunter_name=hunter.name)

            order_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if order_channel:
                await order_channel.send(
                    f"{customer.mention}, –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ {details} –ø—Ä–∏–π–Ω—è–≤ {hunter.mention}, –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è ~{estimated_time}!"
                )

        # –ù–∞—Ç–∏—Å–Ω—É—Ç–æ "‚úÖ –ó—ñ–±—Ä–∞–Ω–æ"
        elif interaction.data["custom_id"].startswith("ready_"):
            from order_logger import get_order_by_id

            order_id = int(interaction.data["custom_id"].replace("ready_", ""))
            order = get_order_by_id(order_id)
            customer_id = order["customer_id"]
            resource = order["details"]  # –¢—É—Ç –≤–∂–µ –±—É–¥–µ ü™® –ö–∞–º—ñ–Ω—å, üå≤ –î–µ—Ä–µ–≤–æ —ñ —Ç.–¥.

            try:
                customer = await interaction.guild.fetch_member(customer_id)
            except:
                await interaction.response.send_message("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–º–æ–≤–Ω–∏–∫–∞ –ø–æ ID.", ephemeral=True)
                return

            order_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if not order_channel:
                await interaction.response.send_message("‚ùå –ö–∞–Ω–∞–ª 'üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", ephemeral=True)
                return

            if "–∫–∞–º—ñ–Ω—å" in resource.lower() or "ü™®" in resource:
                text = (
                    f"‚úÖ –ú–∏—Å–ª–∏–≤–µ—Ü—å –≤–∂–µ –∑—ñ–±—Ä–∞–≤ –Ω–µ–æ–±—Ö—ñ–¥–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—É–¥–∏ —Ç–∞ –æ—á—ñ–∫—É—î –í–∞—Å –Ω–∞ –∫–∞—Ä'—î—Ä—ñ!\n"
                    f"üí° *–ü–æ—Ä–∞–¥–∞: –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–≤—ñ–ª—å–Ω–∏—Ç–∏ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä.*"
                )
            else:
                text = f"‚úÖ –ú–∏—Å–ª–∏–≤–µ—Ü—å –≤–∂–µ –∑—ñ–±—Ä–∞–≤ {resource} —Ç–∞ –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –í–∞–º–∏ –¥–ª—è —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –º—ñ—Å—Ü—è –∑—É—Å—Ç—Ä—ñ—á—ñ!"

            await order_channel.send(f"{customer.mention}, {text}")
            await interaction.response.edit_message(
                content=interaction.message.content,
                view=OrderProgressView(customer, resource, order_id, stage="ready")
            )
            await interaction.followup.send("üì® –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–Ω–∏–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.", ephemeral=True)

       # ‚¨áÔ∏è –ù–∞—Ç–∏—Å–Ω—É—Ç–æ "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
        elif interaction.data["custom_id"].startswith("finish_"):
            from order_logger import update_order_status_by_id, get_order_by_id

            order_id = int(interaction.data["custom_id"].replace("finish_", ""))
            order = get_order_by_id(order_id)
            customer_id = order["customer_id"]

            try:
                customer = await interaction.guild.fetch_member(customer_id)
            except:
                await interaction.response.send_message("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–º–æ–≤–Ω–∏–∫–∞ –ø–æ ID.", ephemeral=True)
                return

            update_order_status_by_id(order_id, "–í–∏–∫–æ–Ω–∞–Ω–æ", hunter_name=interaction.user.name)

            await interaction.response.edit_message(
                content="‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∑–Ω–∞—á–µ–Ω–µ —è–∫ *–≤–∏–∫–æ–Ω–∞–Ω–µ*.",
                view=None
            )

            order_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if order_channel:
                await order_channel.send(
                    f"{customer.mention}, –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ **–≤–∏–∫–æ–Ω–∞–Ω–µ**. "
                    "–î—è–∫—É—î–º–æ, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—å –Ω–∞—à–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏!\n"
                    "üí¨ –ë—É–¥–µ–º–æ —Ä–∞–¥—ñ –±–∞—á–∏—Ç–∏ –í–∞—à –≤—ñ–¥–≥—É–∫ –≤ –∫–∞–Ω–∞–ª—ñ <#1356362829099303160>!"
                )


load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

bot.run(TOKEN)

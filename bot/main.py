import discord
from discord.ext import commands
from discord.ui import View, Button
from discord import Interaction, Embed
from dotenv import load_dotenv
from urllib.parse import urlparse, parse_qs
from datetime import datetime
import asyncio
import os
import datetime
import psycopg2
import urllib.parse as urlparse
from db_logger import (
    save_order_to_db,
    update_order_status_by_id,
    get_order_by_id,
    get_orders_by_user,
    init_db,
    mark_order_accepted,
    mark_order_collected,
    delete_orders_by_customer,
    delete_orders_by_status
)
import traceback
OWNER_ID = 386329540353458186

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

 # üåç Reverse mapping: –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—é—á–∞ —Ä–µ—Å—É—Ä—Å—É
resource_reverse = {
"ü™® –ö–∞–º—ñ–Ω—å": "stone",
"üå≤ –î–µ—Ä–µ–≤–æ": "wood",          
"üêü –†–∏–±–∞": "fish",          
"üçÑ –ì—Ä–∏–±–∏": "mushrooms",
"üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏": "cleaner"            
}

# ‚è±Ô∏è –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å—É
estimated_times = {
"stone": "30‚Äì60 —Ö–≤",
"wood": "15‚Äì20 —Ö–≤",
"fish": "25‚Äì35 —Ö–≤",
"mushrooms": "30 —Ö–≤",
"cleaner": "20‚Äì25 —Ö–≤"
}

invite_cache = {}

@bot.event
async def on_ready():
    await init_db()
    print(f"‚úÖ Logged in as {bot.user}")

    for guild in bot.guilds:
        invites = await guild.invites()
        invite_cache[guild.id] = invites

    # –°–ø—Ä–æ–±–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥–∏
    try:
        synced = await bot.tree.sync()
        print(f"üîÅ Slash-–∫–æ–º–∞–Ω–¥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ: {len(synced)}")
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥:", e)

    bot.add_view(ResourceButtonsView())

# ==============================================
#           [–ë–ª–æ–∫: Slash –∫–æ–º–∞–Ω–¥–∞]
# ==============================================
@bot.tree.command(name="ping", description="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –±–æ—Ç –∂–∏–≤–∏–π")
async def ping(interaction: discord.Interaction):
    if interaction.user.id != OWNER_ID: 
        await interaction.response.send_message("‚õî –¶—è –∫–æ–º–∞–Ω–¥–∞ –ª–∏—à–µ –¥–ª—è –∫–∞–ø—ñ—Ç–∞–Ω–∞!", ephemeral=True)
        return
    await interaction.response.send_message("üèì Pong! –ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π.", ephemeral=True)

# ==============================================
#           [–ë–ª–æ–∫: –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–æ–≤–µ–Ω—å–∫–∏—Ö]
# ==============================================
@bot.event
async def on_member_join(member):
    guild = member.guild
    new_invites = await guild.invites()
    old_invites = invite_cache.get(guild.id, [])

    used_invite = None
    for invite in new_invites:
        for old in old_invites:
            if invite.code == old.code and invite.uses > old.uses:
                used_invite = invite
                break
        if used_invite:
            break

    invite_cache[guild.id] = new_invites  # –æ–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à

    if used_invite:
        inviter_id = used_invite.inviter.id
        invited_id = member.id

        # –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —É –±–∞–∑—É
        try:
            conn = psycopg2.connect(os.getenv("DATABASE_URL"))
            cursor = conn.cursor()
            cursor.execute("""
                INSERT INTO referrals (inviter_id, invited_id)
                VALUES (%s, %s)
                ON CONFLICT (invited_id) DO NOTHING
            """, (inviter_id, invited_id))
            conn.commit()
            cursor.close()
            conn.close()
            print(f"üíæ –î–æ–¥–∞–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª: {inviter_id} ‚Üí {invited_id}")
        except Exception as e:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:", e)

    # 4Ô∏è‚É£ –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è 
    channel = bot.get_channel(1356270026688041171)  # ID —Ç–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É
    image_path = os.path.join(os.path.dirname(__file__), "images", "Hello.png")
    file = discord.File(image_path, filename="Hello.png")

    embed = discord.Embed(
        title=f"üëã –í—ñ—Ç–∞—î–º–æ, {member.name}!",
        description="–Ü–Ω–≤–µ–Ω—Ç–∞—Ä —â–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, –∞–ª–µ –º–∏—Å–ª–∏–≤—Ü—ñ –≤–∂–µ –≤ –¥–æ—Ä–æ–∑—ñ üéØ",
        color=0x8B4513
    )
    embed.set_image(url="attachment://Hello.png")
    await channel.send(content=member.mention, embed=embed, file=file)
    role = discord.utils.get(member.guild.roles, name="–ó–∞–º–æ–≤–Ω–∏–∫ üíº")
    if role:
        # –í–∏–¥–∞—î–º–æ —Ä–æ–ª—å —É—á–∞—Å–Ω–∏–∫—É
        await member.add_roles(role)
        print(f"–†–æ–ª—å '{role.name}' –≤–∏–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {member.name}")
    else:
        print("–†–æ–ª—å '–ó–∞–º–æ–≤–Ω–∏–∫ üíº' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!")


# =======================================================================
#           [–ë–ª–æ–∫: –û—á–∏—â–µ–Ω–Ω—è –≤—ñ—Ç–∞–Ω–Ω—è –∑ @TH Dev Tester]
# =======================================================================
@bot.command(name="clear_tester")
@commands.has_permissions(administrator=True)
async def clear_tester_messages(ctx):
    target_id = 1356372930476507367  # ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @TH Dev Tester
    deleted = 0

    async for msg in ctx.channel.history(limit=300):
        if msg.author == bot.user and str(target_id) in msg.content:
            try:
                await msg.delete()
                deleted += 1
            except:
                pass

    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ {deleted} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, –ø–æ–≤ º—è–∑–∞–Ω–∏—Ö —ñ–∑ @TH Dev Tester.", delete_after=5)


# =======================================================================
#           [–ë–ª–æ–∫: –û—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É (–∫—Ä—ñ–º –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–∏—Ö –ø–æ–≤—ñ–¥.)]
# =======================================================================
@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx):
    # –û—á–∏—â–∞—î–º–æ –≤–µ—Å—å —á–∞—Ç, –∞–ª–µ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    await ctx.channel.purge(check=lambda msg: not msg.pinned)
    await ctx.send("üßπ –ß–∞—Ç –æ—á–∏—â–µ–Ω–æ! –ó–∞–∫—Ä—ñ–ø–ª–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∏–ª–∏—Å—å.", delete_after=5)

# ==============================================
#           [–ë–ª–æ–∫: –û—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö]
# ==============================================
@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è_–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
async def clear_orders_by_user(ctx, member: discord.Member):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_customer(member.id)
    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention}.")

@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è_id")
async def clear_orders_by_customer_id(ctx, customer_id: int):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_customer(customer_id)
    await ctx.send(f"üßπ –£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID `{customer_id}` –≤–∏–¥–∞–ª–µ–Ω–æ.")

@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞_—Å—Ç–∞—Ç—É—Å–æ–º")
async def clear_orders_by_status(ctx, *, status: str):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_status(status)
    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º: **{status}**.")

# ==============================================
#           [–ë–ª–æ–∫: –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ==============================================
@bot.command(name="–ø–∞–Ω–µ–ª—å")
async def show_panel(ctx):
    await ctx.send("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–≤—ñ–π –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç:", view=CabinetButtonView())

# ==============================================
#           [–ë–ª–æ–∫: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è]
# ==============================================
@bot.command()
async def start(ctx):
    class OrderButtonView(View):
        def __init__(self):
            super().__init__(timeout=None)
            self.add_item(Button(label="–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É", style=discord.ButtonStyle.primary, custom_id="order_service"))

    await ctx.send("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=OrderButtonView())

# ==============================================
#           [–ë–ª–æ–∫: –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ==============================================
def get_user_order_stats(customer_id: int):
    conn = psycopg2.connect(
        dbname="railway",
        user="postgres",
        password="FJKgjkxdKaPTNXfxSgbGKpDbVILNojHs",
        host="postgres.railway.internal",
        port="5432"
    )

    cursor = conn.cursor()
    cursor.execute("""
        SELECT COUNT(*) FROM orders WHERE customer_id = %s
    """, (str(customer_id),))
    total_orders = cursor.fetchone()[0]

    cursor.execute("""
        SELECT COUNT(*) FROM orders WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
    """, (str(customer_id),))
    completed_orders = cursor.fetchone()[0]

    cursor.close()
    conn.close()

    return total_orders, completed_orders

def get_order_price(order, cursor):
    resource = order["details"]
    finished_at = order["finished_at"]
    discount = order.get("discount_percent") or 0  # —è–∫—â–æ NULL ‚Äî –∑–Ω–∏–∂–∫–∏ –Ω–µ–º–∞

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–π–Ω–æ–≤—ñ—à—É —Ü—ñ–Ω—É, —è–∫–∞ –¥—ñ—è–ª–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    cursor.execute("""
        SELECT price FROM resource_prices
        WHERE resource = %s AND effective_from <= %s
        ORDER BY effective_from DESC
        LIMIT 1
    """, (resource, finished_at))
    result = cursor.fetchone()

    if not result:
        print(f"‚ö†Ô∏è –¶—ñ–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è {resource} –Ω–∞ {finished_at}")
        return 0

    base_price = result[0]
    final_price = int(base_price * (1 - discount / 100))

    return final_price

def get_total_spent(customer_id: int):
    dsn = os.getenv("DATABASE_URL")
    conn = psycopg2.connect(dsn)

    cursor = conn.cursor()

    cursor.execute("""
        SELECT * FROM orders WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
    """, (str(customer_id),))

    # –û—Ç—Ä–∏–º–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å —è–∫ —Å–ª–æ–≤–Ω–∏–∫–∏
    columns = [desc[0] for desc in cursor.description]
    orders = [dict(zip(columns, row)) for row in cursor.fetchall()]

    total_spent = sum(get_order_price(order, cursor) for order in orders)

    cursor.close()
    conn.close()

    return total_spent


# ...............................................................
#           [–ë–ª–æ–∫: –Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É]
# ............................................................... 
async def check_and_grant_referral_bonus(guild: discord.Guild, inviter_id: int):
    try:
        conn = psycopg2.connect(os.getenv("DATABASE_URL"))
        cursor = conn.cursor()

        # –†–∞—Ö—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏—Ö
        cursor.execute("""
            SELECT COUNT(*) FROM referrals
            WHERE inviter_id = %s AND confirmed = TRUE
        """, (str(inviter_id),))
        confirmed_count = cursor.fetchone()[0]

        # –û—Ç—Ä–∏–º—É—î–º–æ –±–æ–Ω—É—Å–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        cursor.execute("""
            SELECT * FROM user_bonuses WHERE user_id = %s
        """, (inviter_id,))
        user_bonus = cursor.fetchone()

        if not user_bonus:
            cursor.execute("""
                INSERT INTO user_bonuses (user_id) VALUES (%s)
            """, (inviter_id,))
            conn.commit()
            # –ø–µ—Ä–µ–∑–∞–ø–∏—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–ª–æ–Ω–æ–∫
            cursor.execute("""
                SELECT * FROM user_bonuses WHERE user_id = %s
            """, (inviter_id,))
            user_bonus = cursor.fetchone()

        columns = [desc[0] for desc in cursor.description]
        bonus_dict = dict(zip(columns, user_bonus))

        updates = []
        log_channel_id = 1361872158435053759  # –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç
        channel = guild.get_channel(log_channel_id)

        member = await guild.fetch_member(inviter_id)

        # –ó–∞ 10 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
        if confirmed_count >= 10 and not bonus_dict["used_bonus_10"]:
             # –ü–æ—Å—Ç—ñ–π–Ω–∞ –∑–Ω–∏–∂–∫–∞
            updates.append("used_bonus_10 = TRUE")
            updates.append("permanent_discount = 10")
            role = discord.utils.get(guild.roles, name="VIP –ê–º–±–∞—Å–∞–¥–æ—Ä")
            if role:
                await member.add_roles(role)
            await channel.send(f"üíé <@{inviter_id}>, —Ç–∏ –æ—Ç—Ä–∏–º–∞–≤ **—Ä–æ–ª—å `VIP –ê–º–±–∞—Å–∞–¥–æ—Ä` —Ç–∞ –ø–æ—Å—Ç—ñ–π–Ω—É –∑–Ω–∏–∂–∫—É 10%** –∑–∞ 10 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤!")
 
        # –ó–∞ 5 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
        elif confirmed_count >= 5 and not bonus_dict["used_bonus_5"]:
             # –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è + —Ä–æ–ª—å
            updates.append("used_bonus_5 = TRUE")
            updates.append("free_orders = free_orders + 1")
            role = discord.utils.get(guild.roles, name="–ê–º–±–∞—Å–∞–¥–æ—Ä")
            if role:
                await member.add_roles(role)
            await channel.send(f"üëë <@{inviter_id}>, —Ç–∏ –æ—Ç—Ä–∏–º–∞–≤ **—â–µ 1 –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —Ä–æ–ª—å `–ê–º–±–∞—Å–∞–¥–æ—Ä`** –∑–∞ 5 —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤!")
        
        # –ó–∞ 3 —Ä–µ—Ñ–µ—Ä–∞–ª–∏
        elif confirmed_count >= 3 and not bonus_dict["used_bonus_3"]:
             # –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            updates.append("used_bonus_3 = TRUE")
            updates.append("free_orders = free_orders + 1")
            await channel.send(f"üéÅ <@{inviter_id}>, —Ç–∏ –æ—Ç—Ä–∏–º–∞–≤ **1 –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è** –∑–∞ 3 —Ä–µ—Ñ–µ—Ä–∞–ª–∏!")
        
        # –ó–∞ 1 —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        elif confirmed_count >= 1 and not bonus_dict["used_bonus_1"]:
            # –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞ –∑–Ω–∏–∂–∫–∞
            updates.append("used_bonus_1 = TRUE")
            updates.append("permanent_discount = 10")
            await channel.send(f"üí∞ <@{inviter_id}>, —Ç–∏ –æ—Ç—Ä–∏–º–∞–≤ **–æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É –∑–Ω–∏–∂–∫—É 10%** –∑–∞ –ø–µ—Ä—à–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!")

        if updates:
            update_query = f"UPDATE user_bonuses SET {', '.join(updates)} WHERE user_id = %s"
            cursor.execute(update_query, (inviter_id,))
            conn.commit()

        cursor.close()
        conn.close()

    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—ñ –±–æ–Ω—É—Å—ñ–≤:", e)

# ...............................................................
#           [–ë–ª–æ–∫: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏]
# ............................................................... 
async def get_user_discount_and_update(user_id: int) -> int:
    try:
        conn = psycopg2.connect(os.getenv("DATABASE_URL"))
        cursor = conn.cursor()

        cursor.execute("""
            SELECT free_orders, permanent_discount, used_discount_10
            FROM user_bonuses
            WHERE user_id = %s
        """, (user_id,))
        row = cursor.fetchone()

        discount = 0

        if row:
            free_orders, permanent_discount, used_discount_10 = row

            if free_orders > 0:
                discount = 100
                cursor.execute("""
                    UPDATE user_bonuses
                    SET free_orders = free_orders - 1
                    WHERE user_id = %s
                """, (user_id,))
                print(f"üéÅ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è {user_id}")

            elif permanent_discount == 10 and not used_discount_10:
                discount = 10
                cursor.execute("""
                    UPDATE user_bonuses
                    SET used_discount_10 = TRUE, permanent_discount = 0
                    WHERE user_id = %s
                """, (user_id,))
                print(f"üí∏ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É –∑–Ω–∏–∂–∫—É 10% –¥–ª—è {user_id}")

            elif permanent_discount > 0:
                discount = permanent_discount
                print(f"üîÅ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –ø–æ—Å—Ç—ñ–π–Ω—É –∑–Ω–∏–∂–∫—É {permanent_discount}% –¥–ª—è {user_id}")

        conn.commit()
        cursor.close()
        conn.close()

        return discount

    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—ñ –∑–Ω–∏–∂–∫–∏:", e)
        return 0

# ..............................................................................
#           [–ë–ª–æ–∫: –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∑–Ω–∏–∂–∫—É —É –∑–∞–º–æ–≤–Ω–∏–∫–∞]
# ............................................................... ..............
async def get_discount_notice_text(order_id: int) -> str:
    try:
        conn = psycopg2.connect(os.getenv("DATABASE_URL"))
        cursor = conn.cursor()

        cursor.execute("SELECT discount_percent FROM orders WHERE id = %s", (order_id,))
        row = cursor.fetchone()
        cursor.close()
        conn.close()

        if not row:
            return ""

        discount = row[0]

        if discount is None:
            return ""

        if discount >= 100:
            return "üíé –¶–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è! –ö–ª—ñ—î–Ω—Ç –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–ª–∞—Ç–∏—Ç—å."
        elif discount > 0:
            return f"üí∏ –£–≤–∞–≥–∞! –ö–ª—ñ—î–Ω—Ç –º–∞—î –∑–Ω–∏–∂–∫—É {discount}%. –í—Ä–∞—Ö—É–π —Ü–µ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á—ñ —Ä–µ—Å—É—Ä—Å—É."
        else:
            return ""

    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∑–Ω–∏–∂–∫–∏ –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", e)
        return ""

# ==================================================
# [–§—É–Ω–∫—Ü—ñ—è]: –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–æ–Ω—É—Å—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
# ==================================================
async def get_user_bonus_status(user_id: int) -> dict:
    try:
        conn = psycopg2.connect(os.getenv("DATABASE_URL"))
        cursor = conn.cursor()

        cursor.execute("""
            SELECT used_discount_10, permanent_discount, free_orders
            FROM user_bonuses
            WHERE user_id = %s
        """, (user_id,))
        row = cursor.fetchone()

        cursor.close()
        conn.close()

        if not row:
            return {}

        return {
            "used_discount_10": row[0],
            "permanent_discount": row[1],
            "free_orders": row[2]
        }

    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É –±–æ–Ω—É—Å—ñ–≤:", e)
        return {}

# ===============================================================
#           [Class: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ===============================================================
class CabinetButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üìÇ –ó–∞–π—Ç–∏ –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", style=discord.ButtonStyle.primary)
    async def open_cabinet(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_id = interaction.user.id

        total_orders, completed_count = get_user_order_stats(user_id)
        total_spent = get_total_spent(user_id)

        # –û—Ç—Ä–∏–º—É—î–º–æ –±–æ–Ω—É—Å–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        bonus_row = None
        try:
            conn = psycopg2.connect(os.getenv("DATABASE_URL"))
            cursor = conn.cursor()
            cursor.execute("""
                SELECT permanent_discount, used_discount_10, free_orders
                FROM user_bonuses
                WHERE user_id = %s
            """, (user_id,))
            bonus_row = cursor.fetchone()
            cursor.close()
            conn.close()
        except Exception as e:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –±–æ–Ω—É—Å—ñ–≤:", e)

        # –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        discount_text = "0%"
        free_orders_text = "0"

        if bonus_row:
            permanent_discount, used_discount_10, free_orders = bonus_row
            if permanent_discount > 0:
                if used_discount_10:
                    discount_text = f"–ü–æ—Å—Ç—ñ–π–Ω–∞ {permanent_discount}%"
                else:
                    discount_text = f"–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞ {permanent_discount}%"
            if free_orders > 0:
                free_orders_text = str(free_orders)


        embed = discord.Embed(title="üßæ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", color=0x00ffcc)
        embed.add_field(name="–Ü–º‚Äô—è", value=f"<@{user_id}>", inline=False)
        embed.add_field(name="üì¶ –ó–∞–º–æ–≤–ª–µ–Ω—å (–≤—Å—å–æ–≥–æ)", value=str(total_orders), inline=True)
        embed.add_field(name="‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ", value=str(completed_count), inline=True)
        embed.add_field(name="üí∞ –í–∏—Ç—Ä–∞—á–µ–Ω–æ", value=f"${total_spent}", inline=True)
        embed.add_field(name="üéüÔ∏è –ó–Ω–∏–∂–∫–∞", value=discount_text, inline=True)
        embed.add_field(name="üéÅ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", value=free_orders_text, inline=True)


        await interaction.response.send_message(embed=embed, ephemeral=True)

# ...............................................................
#           [–ë–ª–æ–∫: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
# ...............................................................
    @discord.ui.button(label="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞", style=discord.ButtonStyle.secondary)
    async def referral_system(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üß© –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞",
            description=(
                "üéØ **–ó–∞–ø—Ä–æ—à—É–π –¥—Ä—É–∑—ñ–≤ ‚Äî –æ—Ç—Ä–∏–º—É–π –±–æ–Ω—É—Å–∏!**\n"
                "–°—Ç–≤–æ—Ä–∏ —Å–≤–æ—î —É–Ω—ñ–∫–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –ø–æ–¥—ñ–ª–∏—Å—å –Ω–∏–º —ñ–∑ –¥—Ä—É–∑—è–º–∏. "
                "–ö–æ–ª–∏ —Ö—Ç–æ—Å—å –ø—Ä–∏—î–¥–Ω–∞—î—Ç—å—Å—è —ñ –∑—Ä–æ–±–∏—Ç—å —Å–≤–æ—î –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Äî —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –Ω–∞–≥–æ—Ä–æ–¥—É.\n\n"
                "üìä –ù–∞—Ç–∏—Å–Ω–∏ **¬´–ú–æ—ó —Ä–µ—Ñ–µ—Ä–∞–ª–∏¬ª**, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏, –∫–æ–≥–æ —Ç–∏ –≤–∂–µ –∑–∞–ø—Ä–æ—Å–∏–≤ —ñ —Ö—Ç–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏–π."
            ),
            color=0x00ffcc
        )

        await interaction.response.send_message(embed=embed, view=ReferralView(), ephemeral=True)



# ...............................................................
#           [–ë–ª–æ–∫: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
# ...............................................................
    @discord.ui.button(label="üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", style=discord.ButtonStyle.secondary)
    async def detailed_stats(self, interaction: discord.Interaction, button: discord.ui.Button):
        import os
        import psycopg2
        from dotenv import load_dotenv
        load_dotenv()

        dsn = os.getenv("DATABASE_URL")
        conn = psycopg2.connect(dsn)
        cursor = conn.cursor()

        user_id = str(interaction.user.id)

        cursor.execute("""
            SELECT details FROM orders
            WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
        """, (user_id,))

        rows = cursor.fetchall()
        resource_counts = {}

        for row in rows:
            resource = row[0]
            resource_counts[resource] = resource_counts.get(resource, 0) + 1

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç
        if not resource_counts:
            description = "üòî –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å."
        else:
            description = f"–ü—Ä–∏–≤—ñ—Ç, {interaction.user.mention}! –û—Å—å —Ç–≤–æ—è –æ—Å–æ–±–∏—Å—Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å:\n\n"
            description += "\n".join([
                f"{emoji} {name}: {count} –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è(–Ω—å)"
                for name, count in resource_counts.items()
                for emoji in [next((e for e, n in resource_reverse.items() if n == name), "")]
            ])

            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏–π —Ä–µ—Å—É—Ä—Å
            top_resource = max(resource_counts.items(), key=lambda x: x[1], default=(None, 0))
            top_name, top_count = top_resource
            top_emoji = next((e for e, n in resource_reverse.items() if n == top_name), "")

            if top_name:
                description += f"\n\nüî• –ù–∞–π—á–∞—Å—Ç—ñ—à–µ —Ç–∏ –∑–∞–º–æ–≤–ª—è–≤: {top_emoji} {top_name} ({top_count} —Ä–∞–∑–∏)"

            description += "\n\nüîÅ –Ø–∫—â–æ –±—É–¥–µ—à –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –±—ñ–ª—å—à–µ –∑–∞–º–æ–≤–ª–µ–Ω—å ‚Äî —Ç—É—Ç –∑‚Äô—è–≤–∏—Ç—å—Å—è —â–µ –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó!"

        embed = discord.Embed(title="üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description=description, color=0x00ffcc)
        await interaction.response.send_message(embed=embed, ephemeral=True)

        cursor.close()
        conn.close()

# ===============================================================
#           [Class: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è]
# ===============================================================
class CancelOrderButtonView(View):
    def __init__(self, order_id: int):
        super().__init__(timeout=None)
        self.add_item(Button(label="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", style=discord.ButtonStyle.danger, custom_id=f"cancel_user_{order_id}"))

class ReferralView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="üéüÔ∏è –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è", style=discord.ButtonStyle.primary, custom_id="get_ref_link"))
        self.add_item(Button(label="üë• –ú–æ—ó —Ä–µ—Ñ–µ—Ä–∞–ª–∏", style=discord.ButtonStyle.secondary, custom_id="my_referrals"))

class ResourceButtonsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="ü™® –ö–∞–º—ñ–Ω—å", style=discord.ButtonStyle.secondary, custom_id="stone"))
        self.add_item(Button(label="üå≤ –î–µ—Ä–µ–≤–æ", style=discord.ButtonStyle.secondary, custom_id="wood"))
        self.add_item(Button(label="üêü –†–∏–±–∞", style=discord.ButtonStyle.secondary, custom_id="fish"))
        self.add_item(Button(label="üçÑ –ì—Ä–∏–±–∏", style=discord.ButtonStyle.secondary, custom_id="mushrooms"))
        self.add_item(Button(label="üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏", style=discord.ButtonStyle.secondary, custom_id="cleaner"))

class OrderProgressView(View):
    def __init__(self, customer: discord.User, resource: str, order_id: int, stage: str = "new"):
        super().__init__(timeout=None)
        self.customer = customer
        self.resource = resource
        self.order_id = order_id

        if stage == "new":
            self.add_item(Button(label="‚úÖ –ü—Ä–∏–π–Ω—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", style=discord.ButtonStyle.success, custom_id=f"accept_order_{order_id}"))

        elif stage == "accepted":
            self.add_item(Button(label="üì¶ –ó—ñ–±—Ä–∞–Ω–æ", style=discord.ButtonStyle.primary, custom_id=f"ready_{order_id}"))

        elif stage == "ready":
            self.add_item(Button(label="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ", style=discord.ButtonStyle.secondary, custom_id=f"finish_{order_id}"))

# ==============================================
#           [–ë–ª–æ–∫: on_interaction]
# ==============================================
@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        user = interaction.user
        cid = interaction.data["custom_id"]

        if cid == "order_service":
            await interaction.response.send_message("üõí –í–∏–±–µ—Ä–∏ —Ä–µ—Å—É—Ä—Å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=ResourceButtonsView(), ephemeral=False)

        elif cid in ["stone", "wood", "fish", "mushrooms", "cleaner"]:
            resource_names = {
                "stone": "ü™® –ö–∞–º—ñ–Ω—å",
                "wood": "üå≤ –î–µ—Ä–µ–≤–æ",
                "fish": "üêü –†–∏–±–∞",
                "mushrooms": "üçÑ –ì—Ä–∏–±–∏",
                "cleaner": "üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏"
            }
            selected = resource_names[cid]

            discount = await get_user_discount_and_update(user.id)  

            order_data = {
                "customer": user.name,
                "customer_id": user.id,
                "details": selected,
                "hunter": None,
                "status": "–û—á—ñ–∫—É—î",
                "discount_percent": discount  
            }

            order_id = await save_order_to_db(order_data)
            await interaction.message.delete()

            # ‚¨áÔ∏è –í—Å—Ç–∞–≤–ª—è—î–º–æ —Ä–æ–∑—É–º–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–∏–ø—É –∑–Ω–∏–∂–∫–∏
            discount_text = await get_discount_notice_text(order_id)
            bonus_status = await get_user_bonus_status(user.id)

            if discount_text and bonus_status:
                if bonus_status["permanent_discount"] > 0:
                    if bonus_status["used_discount_10"]:
                        discount_text = discount_text.replace("üí∏", "üîÅ").replace("–∑–Ω–∏–∂–∫—É", "–ø–æ—Å—Ç—ñ–π–Ω—É –∑–Ω–∏–∂–∫—É")
                    else:
                        discount_text = discount_text.replace("üí∏", "üü¢").replace("–∑–Ω–∏–∂–∫—É", "–æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É –∑–Ω–∏–∂–∫—É")

            channel = discord.utils.get(interaction.guild.text_channels, name="‚úÖ-–≤–∏–∫–æ–Ω–∞–Ω–Ω—è-–∑–∞–º–æ–≤–ª–µ–Ω—å")
            if channel:
                content = f"üì¶ –ù–∞–¥—ñ–π—à–ª–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{selected}** –≤—ñ–¥ {user.mention}"
                
                if discount_text:
                    content += f"\n{discount_text}"

                await channel.send(
                    content,
                    view=OrderProgressView(user, cid, order_id, stage="new")
                )

            user_channel = interaction.guild.get_channel(1356283008478478546)  # –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            if user_channel:
                await user_channel.send(
                    f"{user.mention}, –≤–∞—à –∑–∞–ø–∏—Ç –Ω–∞ **{selected}** —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ. –Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî –º–æ–∂–µ—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏:",
                    view=CancelOrderButtonView(order_id)
                )
            

        elif cid.startswith("cancel_user_"):
            order_id = int(cid.replace("cancel_user_", ""))
            order = await get_order_by_id(order_id)

            if order["customer_id"] != user.id:
                await interaction.response.send_message("‚õî –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏ —á—É–∂–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!", ephemeral=True)
                return

            if order["status"] != "–û—á—ñ–∫—É—î":
                await interaction.response.send_message("‚ö†Ô∏è –¶–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –ø—Ä–∏–π–Ω—è—Ç–æ —ñ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–µ.", ephemeral=True)
                return

            await update_order_status_by_id(order_id, "–°–∫–∞—Å–æ–≤–∞–Ω–æ", hunter_name=None)

            resource = order["details"]
            customer = interaction.user

            await interaction.response.edit_message(
                content=f"‚ùå –í–∏ —Å–∫–∞—Å—É–≤–∞–ª–∏ —Å–≤–æ—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}**.",
                view=None
            )

            hunters_channel = interaction.guild.get_channel(1356291670110507069)
            if hunters_channel:
                await hunters_channel.send(f"‚ö†Ô∏è –ó–∞–º–æ–≤–Ω–∏–∫ {customer.mention} —Å–∫–∞—Å—É–≤–∞–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}**.")



        elif cid.startswith("accept_order_"):
            order_id = int(cid.replace("accept_order_", ""))
            order = await get_order_by_id(order_id)
            resource = order["details"]
            hunter = user

            try:
                customer = interaction.message.mentions[0]
            except IndexError:
                await interaction.response.send_message("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–º–æ–≤–Ω–∏–∫–∞.", ephemeral=True)
                return

            await interaction.response.edit_message(
                content=f"üîî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}** –ø—Ä–∏–π–Ω—è—Ç–æ –º–∏—Å–ª–∏–≤—Ü–µ–º {hunter.mention}!",
                view=OrderProgressView(customer, cid.split("_")[2], order_id, stage="accepted")
            )

            await mark_order_accepted(order_id, hunter.name)
            notify_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if notify_channel:
                resource_key = resource_reverse.get(resource, "unknown")
                eta = estimated_times.get(resource_key, "20‚Äì30 —Ö–≤")

                await notify_channel.send(
                    f"{customer.mention}, –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}** –ø—Ä–∏–π–Ω—è–≤ {hunter.mention}! üïí –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è ‚Äî {eta}!"
                )
        elif cid.startswith("cancel_"):
            order_id = int(cid.replace("cancel_", ""))
            order = await get_order_by_id(order_id)

            if order["status"] != "–û—á—ñ–∫—É—î":
                await interaction.response.send_message("‚ö†Ô∏è –¶–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –≤ —Ä–æ–±–æ—Ç—ñ –π –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–µ.", ephemeral=True)
                return

            # –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
            await update_order_status_by_id(order_id, "–°–∫–∞—Å–æ–≤–∞–Ω–æ", hunter_name=None)

            customer = interaction.user
            resource = order["details"]

            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–Ω–∏–∫—É
            channel_customer = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if channel_customer:
                await channel_customer.send(f"{customer.mention}, ‚ùå –í–∏ —Å–∫–∞—Å—É–≤–∞–ª–∏ —Å–≤–æ—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}**.")

            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–∏—Å–ª–∏–≤—Ü—è–º
            channel_hunters = discord.utils.get(interaction.guild.text_channels, name="‚úÖ-–≤–∏–∫–æ–Ω–∞–Ω–Ω—è-–∑–∞–º–æ–≤–ª–µ–Ω—å")
            if channel_hunters:
                await channel_hunters.send(f"‚ö†Ô∏è –ó–∞–º–æ–≤–Ω–∏–∫ {customer.mention} —Å–∫–∞—Å—É–≤–∞–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}**.")

            # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
            await interaction.response.edit_message(
                content=f"‚ùå –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}** –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.",
                view=None
            )

        elif cid.startswith("ready_"):
            order_id = int(cid.replace("ready_", ""))
            order = await get_order_by_id(order_id)
            customer_id = order["customer_id"]
            customer = await interaction.guild.fetch_member(customer_id)
            resource = order["details"]
            resource_key = resource_reverse.get(resource, "unknown")

            await mark_order_collected(order_id)

            # üí∏ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∑–Ω–∏–∂–∫–∏
            discount_notice = await get_discount_notice_text(order_id)
            if discount_notice:
                await interaction.channel.send(discount_notice)

            notify_channel = discord.utils.get(

                interaction.guild.text_channels,
                name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
            )

            # üì® –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–Ω–∏–∫—É
            if notify_channel:
                if "–∫–∞–º—ñ–Ω—å" in resource.lower():
                    await notify_channel.send(
                        f"{customer.mention}, ü™® –í–∞—à **–∫–∞–º—ñ–Ω—å** –≥–æ—Ç–æ–≤–∏–π! –ú–∏—Å–ª–∏–≤–µ—Ü—å –æ—á—ñ–∫—É—î –í–∞—Å –Ω–∞ –∫–∞—Ä'—î—Ä—ñ.\nüí° –ó–≤—ñ–ª—å–Ω—ñ—Ç—å —ñ–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å ‚Äî –±—É–¥–µ –≤–∞–∂–∫–æ!"
                    )
                else:
                    await notify_channel.send(
                        f"{customer.mention}, üì¶ –í–∞—à **{resource}** –≤–∂–µ –≤ —Ä—é–∫–∑–∞–∫—É –º–∏—Å–ª–∏–≤—Ü—è! üìç–ó –í–∞–º–∏ –∑–∞—Ä–∞–∑ –∑–≤‚Äô—è–∂—É—Ç—å—Å—è –¥–ª—è —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –º—ñ—Å—Ü—è –∑—É—Å—Ç—Ä—ñ—á—ñ"
                    )

            # üõ†Ô∏è –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
            await interaction.response.edit_message(
                content="üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ–±—Ä–∞–Ω–µ! –ó–∞–º–æ–≤–Ω–∏–∫—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.",
                view=OrderProgressView(customer, resource_key, order_id, stage="ready")
            )


        elif cid.startswith("finish_"):
            if interaction.user.bot:
                return

            order_id = int(cid.replace("finish_", ""))
            order = await get_order_by_id(order_id)
            customer_id = order["customer_id"]
            customer = await interaction.guild.fetch_member(customer_id)

            # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
            await update_order_status_by_id(order_id, "–í–∏–∫–æ–Ω–∞–Ω–æ", hunter_name=user.name)

            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç–æ–º—É –∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
            await interaction.response.edit_message(
                content="‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ.",
                view=None
            )

            # –ù–∞–¥—ñ—à–ª–µ–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–∞–Ω–∞–ª
            notify_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if notify_channel:
                await notify_channel.send(
                    f"{customer.mention}, –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ **–≤–∏–∫–æ–Ω–∞–Ω–µ**. –î—è–∫—É—î–º–æ, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—å –Ω–∞—à–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏! ü§é"
                )
                await notify_channel.send(
                    "üí¨ –ë—É–¥–µ–º–æ —Ä–∞–¥—ñ –±–∞—á–∏—Ç–∏ –í–∞—à –≤—ñ–¥–≥—É–∫ –≤ –∫–∞–Ω–∞–ª—ñ <#1356362829099303160>!"
                )

# ...............................................................
#           [–ë–ª–æ–∫: –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞]
# ...............................................................                
            try:
                conn = psycopg2.connect(os.getenv("DATABASE_URL"))
                cursor = conn.cursor()

                # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∂–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏–π
                cursor.execute("""
                    SELECT confirmed FROM referrals WHERE invited_id = %s
                """, (str(customer_id),))
                confirmed_row = cursor.fetchone()

                if confirmed_row and confirmed_row[0]:  # –í–∂–µ confirmed = TRUE
                    print("üîÅ –†–µ—Ñ–µ—Ä–∞–ª –≤–∂–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏–π ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")
                    cursor.close()
                    conn.close()
                    return
                
                cursor.execute("""
                    SELECT COUNT(*) FROM orders
                    WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
                """, (str(customer_id),))
                completed_orders = cursor.fetchone()[0]


                if completed_orders == 1:
                    # –û–Ω–æ–≤–ª—é—î–º–æ confirmed —É —Ç–∞–±–ª–∏—Ü—ñ referrals
                    cursor.execute("""
                        UPDATE referrals
                        SET confirmed = TRUE
                        WHERE invited_id = %s
                    """, (str(customer_id),))
                    conn.commit()

                    # –û—Ç—Ä–∏–º—É—î–º–æ inviter_id
                    cursor.execute("""
                        SELECT inviter_id FROM referrals
                        WHERE invited_id = %s
                    """, (str(customer_id),))
                    inviter_row = cursor.fetchone()

                    if inviter_row:
                        inviter_id = int(inviter_row[0])
                        await check_and_grant_referral_bonus(interaction.guild, inviter_id)

                        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª –ø–æ ID
                        cabinet_channel_id = 1361872158435053759  # üîÅ ID –∫–∞–Ω–∞–ª—É "–û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç"
                        cabinet_channel = bot.get_channel(cabinet_channel_id)

                        if cabinet_channel:
                            await cabinet_channel.send(
                                f"üéâ <@{inviter_id}>, —Ç–≤—ñ–π —Ä–µ—Ñ–µ—Ä–∞–ª <@{customer_id}> –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏–π! –í—ñ–Ω –≤–∏–∫–æ–Ω–∞–≤ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –î—è–∫—É—î–º–æ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å ‚ù§Ô∏è"
                            )

                cursor.close()
                conn.close()

            except Exception as e:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:", e)

# ...............................................................
#           [–ë–ª–æ–∫: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è]
# ............................................................... 
        elif cid == "get_ref_link":
            guild = interaction.guild
            user = interaction.user
            invites = await guild.invites()

            # –®—É–∫–∞—î–º–æ —ñ–Ω–≤–∞–π—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            existing_invite = next((i for i in invites if i.inviter.id == user.id), None)

            if existing_invite:
                invite_url = existing_invite.url
            else:
                # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —ñ–Ω–≤–∞–π—Ç
                channel = guild.system_channel or guild.text_channels[0]
                new_invite = await channel.create_invite(max_uses=0, unique=True, reason=f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {user.name}")
                invite_url = new_invite.url

            await interaction.response.send_message(
                f"üîó –û—Å—å —Ç–≤–æ—î —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n{invite_url}\n"
                "–†–æ–∑–¥–∞–π –π–æ–≥–æ –¥—Ä—É–∑—è–º! –ü—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ ‚Äî —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –±–æ–Ω—É—Å!",
                ephemeral=True
            )

# ...............................................................
#           [–ë–ª–æ–∫: –∫–Ω–æ–ø–∫–∞ "–ú–æ—ó —Ä–µ—Ñ–µ—Ä–∞–ª–∏"]
# ............................................................... 
        elif cid == "my_referrals":
            user_id = interaction.user.id

            try:
                conn = psycopg2.connect(os.getenv("DATABASE_URL"))
                cursor = conn.cursor()

                # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤
                cursor.execute("""
                    SELECT invited_id, confirmed FROM referrals
                    WHERE inviter_id = %s
                """, (str(user_id),))
                referrals = cursor.fetchall()

                total = len(referrals)
                confirmed = sum(1 for _, is_confirmed in referrals if is_confirmed)

                if referrals:
                    mention_list = []
                    for invited_id, is_confirmed in referrals:
                        status = "‚úÖ" if is_confirmed else "‚ùå"
                        mention_list.append(f"{status} <@{invited_id}>")

                    list_text = "\n".join(mention_list)
                else:
                    list_text = "üòî –£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤."

                embed = discord.Embed(
                    title="üë• –¢–≤–æ—ó —Ä–µ—Ñ–µ—Ä–∞–ª–∏",
                    description=(
                        f"üìå –ó–∞–ø—Ä–æ—à–µ–Ω–æ –≤—Å—å–æ–≥–æ: **{total}**\n"
                        f"üü¢ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ: **{confirmed}**\n\n"
                        f"{list_text}"
                    ),
                    color=0x00ffcc
                )

                await interaction.response.send_message(embed=embed, ephemeral=True)

                cursor.close()
                conn.close()

            except Exception as e:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑—ñ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤:", e)
                await interaction.response.send_message(
                    "‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–≤–æ—ó—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤.",
                    ephemeral=True
                )


load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")
bot.run(TOKEN)


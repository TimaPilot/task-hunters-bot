import discord
from discord.ext import commands
from discord.ui import View, Button
from discord import Interaction, Embed
from dotenv import load_dotenv
from urllib.parse import urlparse, parse_qs
import asyncio
import os
import datetime
import psycopg2
import urllib.parse as urlparse
from db_logger import (
    save_order_to_db,
    update_order_status_by_id,
    get_order_by_id,
    get_orders_by_user,
    init_db,
    mark_order_accepted,
    mark_order_collected,
    delete_orders_by_customer,
    delete_orders_by_status
)
import traceback
OWNER_ID = 386329540353458186

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

 # üåç Reverse mapping: –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—é—á–∞ —Ä–µ—Å—É—Ä—Å—É
resource_reverse = {
"ü™® –ö–∞–º—ñ–Ω—å": "stone",
"üå≤ –î–µ—Ä–µ–≤–æ": "wood",          
"üêü –†–∏–±–∞": "fish",          
"üçÑ –ì—Ä–∏–±–∏": "mushrooms",
"üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏": "cleaner"            
}

# ‚è±Ô∏è –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å—É
estimated_times = {
"stone": "30‚Äì60 —Ö–≤",
"wood": "15‚Äì20 —Ö–≤",
"fish": "25‚Äì35 —Ö–≤",
"mushrooms": "30 —Ö–≤",
"cleaner": "20‚Äì25 —Ö–≤"
}


@bot.event
async def on_ready():
    await init_db()
    print(f"‚úÖ Logged in as {bot.user}")
    
    try:
        synced = await bot.tree.sync()
        print(f"üîÅ Slash-–∫–æ–º–∞–Ω–¥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ: {len(synced)}")
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥:", e)

    bot.add_view(ResourceButtonsView())
    bot.add_view(CabinetButtonView())
    bot.add_view(ReferralView())

# ==============================================
#           [–ë–ª–æ–∫: Slash –∫–æ–º–∞–Ω–¥–∞]
# ==============================================
@bot.tree.command(name="ping", description="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –±–æ—Ç –∂–∏–≤–∏–π")
async def ping(interaction: discord.Interaction):
    if interaction.user.id != OWNER_ID: 
        await interaction.response.send_message("‚õî –¶—è –∫–æ–º–∞–Ω–¥–∞ –ª–∏—à–µ –¥–ª—è –∫–∞–ø—ñ—Ç–∞–Ω–∞!", ephemeral=True)
        return
    await interaction.response.send_message("üèì Pong! –ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π.", ephemeral=True)

# ==============================================
#           [–ë–ª–æ–∫: –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –Ω–æ–≤–µ–Ω—å–∫–∏—Ö]
# ==============================================
@bot.event
async def on_member_join(member):
    # 4Ô∏è‚É£ –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è 
    channel = bot.get_channel(1356270026688041171)  # ID —Ç–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É
    image_path = os.path.join(os.path.dirname(__file__), "images", "Hello.png")
    file = discord.File(image_path, filename="Hello.png")

    embed = discord.Embed(
        title=f"üëã –í—ñ—Ç–∞—î–º–æ, {member.name}!",
        description="–Ü–Ω–≤–µ–Ω—Ç–∞—Ä —â–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, –∞–ª–µ –º–∏—Å–ª–∏–≤—Ü—ñ –≤–∂–µ –≤ –¥–æ—Ä–æ–∑—ñ üéØ",
        color=0x8B4513
    )
    embed.set_image(url="attachment://Hello.png")
    await channel.send(content=member.mention, embed=embed, file=file)
    role = discord.utils.get(member.guild.roles, name="–ó–∞–º–æ–≤–Ω–∏–∫ üíº")
    if role:
        # –í–∏–¥–∞—î–º–æ —Ä–æ–ª—å —É—á–∞—Å–Ω–∏–∫—É
        await member.add_roles(role)
        print(f"–†–æ–ª—å '{role.name}' –≤–∏–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {member.name}")
    else:
        print("–†–æ–ª—å '–ó–∞–º–æ–≤–Ω–∏–∫ üíº' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!")

    invites = await member.guild.invites()
    used_invite = max(invites, key=lambda i: i.uses)

    dsn = os.getenv("DATABASE_URL")
    conn = psycopg2.connect(dsn)
    cursor = conn.cursor()

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π —Ü–µ–π invited_id
    cursor.execute("SELECT * FROM referrals WHERE invited_id = %s", (used_invite.code,))
    referral = cursor.fetchone()

    if referral:
        # –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Å ‚Äî –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ —Ä–µ—Ñ–µ—Ä–∞–ª
        cursor.execute("""
            UPDATE referrals
            SET confirmed = TRUE
            WHERE invited_id = %s
        """, (used_invite.code,))
        conn.commit()
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –¥–ª—è {member.name}")
    else:
        print(f"‚ö†Ô∏è –Ü–Ω–≤–∞–π—Ç {used_invite.code} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ")

    cursor.close()
    conn.close()
# =======================================================================
#           [–ë–ª–æ–∫: –û—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É (–∫—Ä—ñ–º –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω–∏—Ö –ø–æ–≤—ñ–¥.)]
# =======================================================================
@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx):
    # –û—á–∏—â–∞—î–º–æ –≤–µ—Å—å —á–∞—Ç, –∞–ª–µ –∑–∞–ª–∏—à–∞—î–º–æ –∑–∞–∫—Ä—ñ–ø–ª–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    await ctx.channel.purge(check=lambda msg: not msg.pinned)
    await ctx.send("üßπ –ß–∞—Ç –æ—á–∏—â–µ–Ω–æ! –ó–∞–∫—Ä—ñ–ø–ª–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∏–ª–∏—Å—å.", delete_after=5)

# ==============================================
#           [–ë–ª–æ–∫: –û—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö]
# ==============================================
@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è_–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
async def clear_orders_by_user(ctx, member: discord.Member):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_customer(member.id)
    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention}.")

@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è_id")
async def clear_orders_by_customer_id(ctx, customer_id: int):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_customer(customer_id)
    await ctx.send(f"üßπ –£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID `{customer_id}` –≤–∏–¥–∞–ª–µ–Ω–æ.")

@bot.command(name="–æ—á–∏—Å—Ç–∏—Ç–∏_–∑–∞_—Å—Ç–∞—Ç—É—Å–æ–º")
async def clear_orders_by_status(ctx, *, status: str):
    if ctx.author.id != 386329540353458186:
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")
        return

    await delete_orders_by_status(status)
    await ctx.send(f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º: **{status}**.")

# ==============================================
#           [–ë–ª–æ–∫: –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ==============================================
@bot.command(name="–ø–∞–Ω–µ–ª—å")
async def show_panel(ctx):
    await ctx.send("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–≤—ñ–π –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç:", view=CabinetButtonView())

# ==============================================
#           [–ë–ª–æ–∫: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è]
# ==============================================
@bot.command()
async def start(ctx):
    class OrderButtonView(View):
        def __init__(self):
            super().__init__(timeout=None)
            self.add_item(Button(label="–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É", style=discord.ButtonStyle.primary, custom_id="order_service"))

    await ctx.send("–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=OrderButtonView())

# ==============================================
#           [–ë–ª–æ–∫: –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ==============================================
def get_user_order_stats(customer_id: int):
    conn = psycopg2.connect(
        dbname="railway",
        user="postgres",
        password="FJKgjkxdKaPTNXfxSgbGKpDbVILNojHs",
        host="postgres.railway.internal",
        port="5432"
    )

    cursor = conn.cursor()
    cursor.execute("""
        SELECT COUNT(*) FROM orders WHERE customer_id = %s
    """, (str(customer_id),))
    total_orders = cursor.fetchone()[0]

    cursor.execute("""
        SELECT COUNT(*) FROM orders WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
    """, (str(customer_id),))
    completed_orders = cursor.fetchone()[0]

    cursor.close()
    conn.close()

    return total_orders, completed_orders

def get_order_price(order, cursor):
    resource = order["details"]
    finished_at = order["finished_at"]
    discount = order.get("discount_percent") or 0  # —è–∫—â–æ NULL ‚Äî –∑–Ω–∏–∂–∫–∏ –Ω–µ–º–∞

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–π–Ω–æ–≤—ñ—à—É —Ü—ñ–Ω—É, —è–∫–∞ –¥—ñ—è–ª–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    cursor.execute("""
        SELECT price FROM resource_prices
        WHERE resource = %s AND effective_from <= %s
        ORDER BY effective_from DESC
        LIMIT 1
    """, (resource, finished_at))
    result = cursor.fetchone()

    if not result:
        print(f"‚ö†Ô∏è –¶—ñ–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è {resource} –Ω–∞ {finished_at}")
        return 0

    base_price = result[0]
    final_price = int(base_price * (1 - discount / 100))

    return final_price

def get_total_spent(customer_id: int):
    dsn = os.getenv("DATABASE_URL")
    conn = psycopg2.connect(dsn)

    cursor = conn.cursor()

    cursor.execute("""
        SELECT * FROM orders WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
    """, (str(customer_id),))

    # –û—Ç—Ä–∏–º–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å —è–∫ —Å–ª–æ–≤–Ω–∏–∫–∏
    columns = [desc[0] for desc in cursor.description]
    orders = [dict(zip(columns, row)) for row in cursor.fetchall()]

    total_spent = sum(get_order_price(order, cursor) for order in orders)

    cursor.close()
    conn.close()

    return total_spent

# ===============================================================
#           [Class: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç]
# ===============================================================
class CabinetButtonView(View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üìÇ –ó–∞–π—Ç–∏ –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", style=discord.ButtonStyle.primary)
    async def open_cabinet(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_id = interaction.user.id

        total_orders, completed_count = get_user_order_stats(user_id)
        total_spent = get_total_spent(user_id)

        embed = discord.Embed(title="üßæ –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç", color=0x00ffcc)
        embed.add_field(name="–Ü–º‚Äô—è", value=f"<@{user_id}>", inline=False)
        embed.add_field(name="üì¶ –ó–∞–º–æ–≤–ª–µ–Ω—å (–≤—Å—å–æ–≥–æ)", value=str(total_orders), inline=True)
        embed.add_field(name="‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ", value=str(completed_count), inline=True)
        embed.add_field(name="üí∞ –í–∏—Ç—Ä–∞—á–µ–Ω–æ", value=f"${total_spent}", inline=True)
        embed.add_field(name="üéüÔ∏è –ó–Ω–∏–∂–∫–∞", value="0%", inline=True)
        embed.add_field(name="üéÅ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", value="0", inline=True)

        await interaction.response.send_message(embed=embed, ephemeral=True)


# ...............................................................
#           [–ë–ª–æ–∫: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
# ...............................................................
    @discord.ui.button(label="üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞", style=discord.ButtonStyle.secondary)
    async def referral_system(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message(
            "üß© –û–±–µ—Ä–∏ –¥—ñ—é –Ω–∏–∂—á–µ —â–æ–¥–æ —Ç–≤–æ—î—ó —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏:",
            view=ReferralView(),
            ephemeral=True
        )


# ...............................................................
#           [–ë–ª–æ–∫: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
# ...............................................................
    @discord.ui.button(label="üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", style=discord.ButtonStyle.secondary)
    async def detailed_stats(self, interaction: discord.Interaction, button: discord.ui.Button):
        import os
        import psycopg2
        from dotenv import load_dotenv
        load_dotenv()

        dsn = os.getenv("DATABASE_URL")
        conn = psycopg2.connect(dsn)
        cursor = conn.cursor()

        user_id = str(interaction.user.id)

        cursor.execute("""
            SELECT details FROM orders
            WHERE customer_id = %s AND status = '–í–∏–∫–æ–Ω–∞–Ω–æ'
        """, (user_id,))

        rows = cursor.fetchall()
        resource_counts = {}

        for row in rows:
            resource = row[0]
            resource_counts[resource] = resource_counts.get(resource, 0) + 1

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç
        if not resource_counts:
            description = "üòî –£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å."
        else:
            description = f"–ü—Ä–∏–≤—ñ—Ç, {interaction.user.mention}! –û—Å—å —Ç–≤–æ—è –æ—Å–æ–±–∏—Å—Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å:\n\n"
            description += "\n".join([
                f"{emoji} {name}: {count} –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è(–Ω—å)"
                for name, count in resource_counts.items()
                for emoji in [next((e for e, n in resource_reverse.items() if n == name), "")]
            ])

            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏–π —Ä–µ—Å—É—Ä—Å
            top_resource = max(resource_counts.items(), key=lambda x: x[1], default=(None, 0))
            top_name, top_count = top_resource
            top_emoji = next((e for e, n in resource_reverse.items() if n == top_name), "")

            if top_name:
                description += f"\n\nüî• –ù–∞–π—á–∞—Å—Ç—ñ—à–µ —Ç–∏ –∑–∞–º–æ–≤–ª—è–≤: {top_emoji} {top_name} ({top_count} —Ä–∞–∑–∏)"

            description += "\n\nüîÅ –Ø–∫—â–æ –±—É–¥–µ—à –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –±—ñ–ª—å—à–µ –∑–∞–º–æ–≤–ª–µ–Ω—å ‚Äî —Ç—É—Ç –∑‚Äô—è–≤–∏—Ç—å—Å—è —â–µ –±—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó!"

        embed = discord.Embed(title="üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description=description, color=0x00ffcc)
        await interaction.response.send_message(embed=embed, ephemeral=True)

        cursor.close()
        conn.close()


# ===============================================================
#           [Class: –í–∏–≥–ª—è–¥ –∫–Ω–æ–ø–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞]
# ===============================================================
# ========================= [Referral View] =========================

class ReferralView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.custom_id = "get_referral_link"

    @discord.ui.button(
        label="üìé –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è",
        style=discord.ButtonStyle.primary
    )
    async def get_referral_link(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_id = interaction.user.id

        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
        dsn = os.getenv("DATABASE_URL")
        conn = psycopg2.connect(dsn)
        cursor = conn.cursor()

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ —î –∑–∞–ø–∏—Å –∑ —Ü–∏–º inviter_id
        cursor.execute("SELECT invited_id FROM referrals WHERE inviter_id = %s", (user_id,))
        existing = cursor.fetchone()

        if existing:
            # –Ø–∫—â–æ —î ‚Äî –±–µ—Ä–µ–º–æ –Ω–∞—è–≤–Ω–æ–≥–æ invited_id
            invited_id = existing[0]
        else:
            # –Ø–∫—â–æ –Ω–µ–º–∞ ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–≤–∞–π—Ç
            channel = interaction.guild.system_channel or interaction.channel
            invite = await channel.create_invite(
                reason=f"–Ü–Ω–≤–∞–π—Ç –¥–ª—è {interaction.user.name}",
                max_uses=0,
                unique=True
            )
            invite_code = invite.code  # —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            invited_id = 0  # —Ç–∏–º—á–∞—Å–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –±–æ —â–µ –Ω–µ –≤—ñ–¥–æ–º–æ, —Ö—Ç–æ –ø—Ä–∏—î–¥–Ω–∞—î—Ç—å—Å—è

            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–∏—à–µ inviter_id (user_id) ‚Äî invited_id –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø—ñ–∑–Ω—ñ—à–µ
            cursor.execute("""
                INSERT INTO referrals (inviter_id, invited_id, confirmed)
                VALUES (%s, %s, FALSE)
            """, (user_id, invited_id))
            conn.commit()

        referral_link = f"https://discord.gg/{invite.code}"

        await interaction.response.send_message(
            f"üìé –û—Å—å —Ç–≤–æ—î —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n`{referral_link}`\n"
            "–°–∫–æ–ø—ñ—é–π –π–æ–≥–æ —Ç–∞ –ø–µ—Ä–µ–¥–∞–π –¥—Ä—É–≥—É. –ü—ñ—Å–ª—è –π–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –±–æ–Ω—É—Å üéÅ",
            ephemeral=True
        )

        cursor.close()
        conn.close()


class ResourceButtonsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="ü™® –ö–∞–º—ñ–Ω—å", style=discord.ButtonStyle.secondary, custom_id="stone"))
        self.add_item(Button(label="üå≤ –î–µ—Ä–µ–≤–æ", style=discord.ButtonStyle.secondary, custom_id="wood"))
        self.add_item(Button(label="üêü –†–∏–±–∞", style=discord.ButtonStyle.secondary, custom_id="fish"))
        self.add_item(Button(label="üçÑ –ì—Ä–∏–±–∏", style=discord.ButtonStyle.secondary, custom_id="mushrooms"))
        self.add_item(Button(label="üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏", style=discord.ButtonStyle.secondary, custom_id="cleaner"))

class OrderProgressView(View):
    def __init__(self, customer: discord.User, resource: str, order_id: int, stage: str = "new"):
        super().__init__(timeout=None)
        self.customer = customer
        self.resource = resource
        self.order_id = order_id

        if stage == "new":
            self.add_item(Button(label="‚úÖ –ü—Ä–∏–π–Ω—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", style=discord.ButtonStyle.success, custom_id=f"accept_order_{order_id}"))

        elif stage == "accepted":
            self.add_item(Button(label="üì¶ –ó—ñ–±—Ä–∞–Ω–æ", style=discord.ButtonStyle.primary, custom_id=f"ready_{order_id}"))

        elif stage == "ready":
            self.add_item(Button(label="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ", style=discord.ButtonStyle.secondary, custom_id=f"finish_{order_id}"))

# ==============================================
#           [–ë–ª–æ–∫: on_interaction]
# ==============================================
@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        user = interaction.user
        cid = interaction.data["custom_id"]

        if cid == "order_service":
            await interaction.response.send_message("üõí –í–∏–±–µ—Ä–∏ —Ä–µ—Å—É—Ä—Å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:", view=ResourceButtonsView(), ephemeral=False)

        elif cid in ["stone", "wood", "fish", "mushrooms", "cleaner"]:
            resource_names = {
                "stone": "ü™® –ö–∞–º—ñ–Ω—å",
                "wood": "üå≤ –î–µ—Ä–µ–≤–æ",
                "fish": "üêü –†–∏–±–∞",
                "mushrooms": "üçÑ –ì—Ä–∏–±–∏",
                "cleaner": "üß¥ –ú–∏—é—á—ñ –∑–∞—Å–æ–±–∏"
            }
            selected = resource_names[cid]

            order_data = {
                "customer": user.name,
                "customer_id": user.id,
                "details": selected,
                "hunter": None,
                "status": "–û—á—ñ–∫—É—î"
            }

            order_id = await save_order_to_db(order_data)
            await interaction.message.delete()
            channel = discord.utils.get(interaction.guild.text_channels, name="‚úÖ-–≤–∏–∫–æ–Ω–∞–Ω–Ω—è-–∑–∞–º–æ–≤–ª–µ–Ω—å")
            if channel:
                await channel.send(
                    f"üÜï –ù–∞–¥—ñ–π—à–ª–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{selected}** –≤—ñ–¥ {user.mention}",
                    view=OrderProgressView(user, cid, order_id, stage="new")
                )
            await interaction.response.send_message(
                f"üì® –í–∞—à –∑–∞–ø–∏—Ç –Ω–∞ **{selected}** —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.", ephemeral=True
            )

        elif cid.startswith("accept_order_"):
            order_id = int(cid.replace("accept_order_", ""))
            order = await get_order_by_id(order_id)
            resource = order["details"]
            hunter = user

            try:
                customer = interaction.message.mentions[0]
            except IndexError:
                await interaction.response.send_message("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∑–∞–º–æ–≤–Ω–∏–∫–∞.", ephemeral=True)
                return

            await interaction.response.edit_message(
                content=f"üîî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}** –ø—Ä–∏–π–Ω—è—Ç–æ –º–∏—Å–ª–∏–≤—Ü–µ–º {hunter.mention}!",
                view=OrderProgressView(customer, cid.split("_")[2], order_id, stage="accepted")
            )

            await mark_order_accepted(order_id, hunter.name)
            notify_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if notify_channel:
                resource_key = resource_reverse.get(resource, "unknown")
                eta = estimated_times.get(resource_key, "20‚Äì30 —Ö–≤")

                await notify_channel.send(
                    f"{customer.mention}, –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ **{resource}** –ø—Ä–∏–π–Ω—è–≤ {hunter.mention}! üïí –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è ‚Äî {eta}!"
                )


        elif cid.startswith("ready_"):
            order_id = int(cid.replace("ready_", ""))
            order = await get_order_by_id(order_id)
            customer_id = order["customer_id"]
            customer = await interaction.guild.fetch_member(customer_id)
            resource = order["details"]
            resource_key = resource_reverse.get(resource, "unknown")

            await mark_order_collected(order_id)

            notify_channel = discord.utils.get(
                interaction.guild.text_channels,
                name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
            )

            # üì® –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–Ω–∏–∫—É
            if notify_channel:
                if "–∫–∞–º—ñ–Ω—å" in resource.lower():
                    await notify_channel.send(
                        f"{customer.mention}, ü™® –í–∞—à **–∫–∞–º—ñ–Ω—å** –≥–æ—Ç–æ–≤–∏–π! –ú–∏—Å–ª–∏–≤–µ—Ü—å –æ—á—ñ–∫—É—î –í–∞—Å –Ω–∞ –∫–∞—Ä'—î—Ä—ñ.\nüí° –ó–≤—ñ–ª—å–Ω—ñ—Ç—å —ñ–Ω–≤–µ–Ω—Ç–∞—Ä –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å ‚Äî –±—É–¥–µ –≤–∞–∂–∫–æ!"
                    )
                else:
                    await notify_channel.send(
                        f"{customer.mention}, üì¶ –í–∞—à **{resource}** –≤–∂–µ –≤ —Ä—é–∫–∑–∞–∫—É –º–∏—Å–ª–∏–≤—Ü—è! üìç–ó –í–∞–º–∏ –∑–∞—Ä–∞–∑ –∑–≤‚Äô—è–∂—É—Ç—å—Å—è –¥–ª—è —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –º—ñ—Å—Ü—è –∑—É—Å—Ç—Ä—ñ—á—ñ"
                    )

            # üõ†Ô∏è –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
            await interaction.response.edit_message(
                content="üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ–±—Ä–∞–Ω–µ! –ó–∞–º–æ–≤–Ω–∏–∫—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.",
                view=OrderProgressView(customer, resource_key, order_id, stage="ready")
            )


        elif cid.startswith("finish_"):
            if interaction.user.bot:
                return

            order_id = int(cid.replace("finish_", ""))
            order = await get_order_by_id(order_id)
            customer_id = order["customer_id"]
            customer = await interaction.guild.fetch_member(customer_id)

            # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
            await update_order_status_by_id(order_id, "–í–∏–∫–æ–Ω–∞–Ω–æ", hunter_name=user.name)

            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç–æ–º—É –∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
            await interaction.response.edit_message(
                content="‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ.",
                view=None
            )

            # –ù–∞–¥—ñ—à–ª–µ–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–∞–Ω–∞–ª
            notify_channel = discord.utils.get(interaction.guild.text_channels, name="üìù-–∑—Ä–æ–±–∏—Ç–∏-–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
            if notify_channel:
                await notify_channel.send(
                    f"{customer.mention}, –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ **–≤–∏–∫–æ–Ω–∞–Ω–µ**. –î—è–∫—É—î–º–æ, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—å –Ω–∞—à–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏! ü§é"
                )
                await notify_channel.send(
                    "üí¨ –ë—É–¥–µ–º–æ —Ä–∞–¥—ñ –±–∞—á–∏—Ç–∏ –í–∞—à –≤—ñ–¥–≥—É–∫ –≤ –∫–∞–Ω–∞–ª—ñ <#1356362829099303160>!"
                )

load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")
bot.run(TOKEN)
